{
  "name": "rustly",
  "version": "0.0.1",
  "main": "dist/index.js",
  "types": "dist/index.d.js",
  "author": "Florian Guyonnet",
  "license": "MIT",
  "description": "lightweight and versatile utility that brings the power and convenience of Rust's Option and Result types to JavaScript and TypeScript. Inspired by Rust's functional error-handling and optional value handling patterns, his package offers a clean and expressive way to handle success and failure scenarios without resorting to complex error handling mechanisms.",
  "keywords": [
    "rust",
    "rustly",
    "option",
    "result",
    "optional",
    "sucess",
    "failure",
    "some",
    "none"
  ],
  "files": [
    "dist"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/florianguyonnet/rustly.git"
  },
  "scripts": {
    "build": "tsc",
    "test": "vitest",
    "coverage": "vitest run --coverage",
    "lint": "eslint --ext .ts src/"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^6.1.0",
    "@vitest/coverage-v8": "^0.33.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-airbnb-typescript": "^17.1.0",
    "eslint-plugin-simple-import-sort": "^10.0.0",
    "ts-node": "^10.9.1",
    "typescript": "^5.1.6",
    "vitest": "^0.33.0"
  }
}

